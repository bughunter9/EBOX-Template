#include<iostream>
#include<cstdlib>
using std::cin;
using std::cout;
using std::endl;
using std::string;
#define SIZE 10

template<class T>

class Stack
{
     //fill the code
     int top, maxsize;
     T* arr;
     public:
     Stack(int size = SIZE);
     void push(T);
     T pop();
     void display();
     T peek();
     int size();
     bool isEmpty();
     bool isFull();

};

template <class T>
Stack<T>::Stack(int size)
{
    arr = new T[size];
    maxsize = size;
    top = -1;
}

template <class T>
void Stack<T>::push(T x)
{

    cout << "Inserting " << x << endl << endl;
    arr[++top] = x;
}

template <class T>
T Stack<T>::pop()
{
    cout << "Removing " << peek() << endl << endl;

    
    return arr[top--];
}

template <class T>
T Stack<T>::peek()
{
    if (!isEmpty())
        return arr[top];
    else
        exit(1);
}

template <class T>
int Stack<T>::size()
{
    return top + 1;
}

template <class T>
bool Stack<T>::isEmpty()
{
    return top == -1;
}

template <class T>
bool Stack<T>::isFull()
{
    return top == maxsize - 1;
}

template <class T>
void Stack<T>::display()
{
    for(int i=0; i<size(); i++){
        cout<<" "<<*(arr+i);
    }
    cout<<"\n";
}

int main()
{

    int s,n;
    string item;
    cin>>s;
     Stack<string>st(s);
    do
    {
    cout<<"1.Insertion"<<endl;
    cout<<"2.Deletion"<<endl;
    cout<<"3.Display Stack"<<endl;
    cout<<"4.Exit"<<endl;
    cout<<"Enter your Choice:"<<endl<<endl;
    cin>>n;
    if(n==1)
    {
        cin.get();
        cout<<"Enter the element to insert : "<<endl;
        getline(cin,item);
        if(!st.isFull())
        {
        st.push(item);
        }
        else
        cout<<"Stack is full!"<<endl;
        //cout<<"Inserting "<<item;
    }
    else if(n==2)
    {
        if(!st.isEmpty())
        {
            st.pop();
            
        }
        else
        cout<<"Stack is empty!"<<endl;
    }
    else if(n==3)
    {
      if(!st.isEmpty())
        {
        cout<<"Stack elements are : ";
        st.display();
        }
        else
        cout<<"Stack is empty!"<<endl;
    }
    
    else if (n==4)
    {
        exit(0);
    }
    }while(n>=1&&n<5);
    return 0;
}
